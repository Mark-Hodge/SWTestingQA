@{
    ViewData["Title"] = "Development Lifecyle Information";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<p>
    The following tools were determined to be most effective in realizing the goals of
    this project. These cools in conjungtion with each other made it easy to implement a
    continous integration/development pipeline. Taking advantage of static code analysis
    during build and automated unit tests run before commitment to the staging branch.
    Automatic deployment to a staging environment where end-to-end UI tests are executed
    automatically, ensuring full accesibility and proper functionality of elements prior
    to manual deployment to the production environment upon commit to the master branch.
</p>
<br />

<h4>Development Environment</h4>
<h5>Language</h5>
<p style="margin-left: 40px">Backend: C#<br />Frontend: HTML</p>
<h5>Framework</h5>
<p style="margin-left: 40px">ASP.NET 4.7.2</p>
<h5>Static Analysis</h5>
<p style="margin-left: 40px">Microsoft Code Analysis v2.9.8</p>
<h5>Automated Unit Testing</h5>
<p style="margin-left: 40px">Microsoft Test Framework v2.0.0</p>
<h5>Automated End-To-End Tests</h5>
<p style="margin-left: 40px">Test Project v2.0.0</p>
<h5>Development Environment</h5>
<p style="margin-left: 40px">Windows 10 Pro v1903</p>
<p style="margin-left: 40px">Visual Studio 2019, Community Addition</p>